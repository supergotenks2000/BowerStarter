@{
    ViewData["Title"] = "Knockout";
}

<h2>@ViewData["Title"].</h2>

<br /><br />

<h3>Record <span data-bind="text: displayRecord"></span></h3>
<table>
    <thead>
        <tr>
            <th>Opponent</th>
            <th>Result</th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody data-bind="template: { name: 'rowTemplate', foreach: gameResults }">
    </tbody>
</table>
<button data-bind="click: addResult">Add Result</button>

<script type="text/html" id="rowTemplate">
    <tr>
        <td><input data-bind="value: opponent" /></td>
        <td>
            <select data-bind="options: $root.resultChoices,
                value: result, optionsText: $data"></select>
        </td>
        <td><button data-bind="click: $parent.removeResult">Remove</button></td>
        <td><label><input type="checkbox" data-bind="checked: isOnTwitter" />On Twitter</label></td>
        <td><input data-bind="value: twitterName, visible: isOnTwitter" /></td>
    </tr>
</script>

<script>
    function GameResult(opponent, result) {
        var self = this;
        self.opponent = opponent;
        self.result = ko.observable(result);
        self.isOnTwitter = ko.observable(false);
        self.twitterName = ko.observable();
    }

    function ViewModelRecord() {
        var self = this;

        self.resultChoices = ["Win", "Loss", "Tie"];

        self.gameResults = ko.observableArray([
            new GameResult("Brendan", self.resultChoices[0]),
            new GameResult("Brendan", self.resultChoices[0]),
            new GameResult("Michelle", self.resultChoices[1])
        ]);

        self.addResult = function () {
            self.gameResults.push(new GameResult("", self.resultChoices[0]));
        }

        self.displayRecord = ko.computed(function () {
            var wins = self.gameResults().filter(function (value) { return value.result() === "Win"; }).length;
            var losses = self.gameResults().filter(function (value) { return value.result() === "Loss"; }).length;
            var ties = self.gameResults().filter(function (value) { return value.result() === "Tie"; }).length;

            return wins + " - " + losses + " - " + ties;
        }, this);

        self.removeResult = function () {
            self.gameResults.remove(this);
        };
    };
    ko.applyBindings(new ViewModelRecord);
</script>